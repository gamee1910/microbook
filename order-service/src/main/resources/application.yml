spring:
  application:
    name: order-service
  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:25432/postgres}
    username: ${DB_USER:postgres}
    password: ${DB_PASS:postgres}
  jpa:
    open-in-view: false
  rabbitmq:
    host: ${RABBITMQ_HOST:localhost}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USER:guest}
    password: ${RABBITMQ_PASS:guest}
server:
  port: 8082
management:
  endpoints:
    web:
      exposure:
        include: '*'
  info:
    git:
      mode: full
springdoc:
  swagger-ui:
    path: index
  packages-to-scan: com.game.microbook.order.web.controllers

resilience4j:
  retry:
    backends:
      catalog-service:
        max-attempts: 2
        wait-duration:
          seconds: 1
  circuitbreaker:
    backends:
      catalog-service:
        sliding-window-size: 6
        sliding-window-type: COUNT_BASED
        minimum-number-of-calls: 4
        wait-duration-in-open-state:
          seconds: 20
        permitted-number-of-calls-in-half-open-state: 2
        failure-rate-threshold: 50
orders:
  catalogServiceUrl: http://localhost:8081
  orderEventsExchange: orders-exchange
  newOrdersQueue: new-orders
  deliveredOrdersQueue: delivered-orders
  cancelledOrdersQueue: cancelled-orders
  errorOrdersQueue: error-orders